"use strict";function isAdmin(a){return a.isAdmin()}function getCategories(a,b,c){var d=b.defer();return c.category.list().then(function(a){d.resolve(a.data)})["catch"](function(a){d.reject(a)}),d.promise}function welcomeHtml(a,b){var c=b.defer();return a.customizablePage.get("welcome-page.html").then(function(a){c.resolve(a.data)})["catch"](function(a){c.reject(a)}),c.promise}isAdmin.$inject=["AuthenticationService"],getCategories.$inject=["$http","$q","$api"],welcomeHtml.$inject=["$api","$q"],angular.module("knowledgebowl",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngStorage","ngTouch","ngMessages","mgcrea.ngStrap","angular-loading-bar","toastr","ui.toggle","ui.bootstrap","angularUtils.directives.dirPagination","btorfs.multiselect","textAngular","rzModule","tableSort"]).config(["$routeProvider","$locationProvider","toastrConfig",function(a,b,c){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"ctrl",resolve:{welcomeHtml:welcomeHtml}}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl",controllerAs:"ctrl"}).when("/forgot-password",{templateUrl:"views/forgot-password.html",controller:"ForgotPasswordCtrl",controllerAs:"ctrl"}).when("/forgot-email",{templateUrl:"views/forgot-email.html",controller:"ForgotEmailCtrl",controllerAs:"ctrl"}).when("/print-competition",{templateUrl:"views/print-competition.html",controller:"PrintCompetitionCtrl",controllerAs:"ctrl",resolve:{questions:["$location","$api","$q",function(a,b,c){var d=c.defer(),e=a.search().idList;return b.question.listByIds(e).then(function(a){d.resolve(a.data.questions)})["catch"](function(){d.resolve(void 0)}),d.promise}]}}).when("/reset-password/:passwordResetToken",{templateUrl:"views/reset-password.html",controller:"ResetPasswordCtrl",controllerAs:"ctrl",resolve:{authorizedToken:["$route","$api","$q",function(a,b,c){var d=c.defer();return b.auth.authorizePasswordResetToken(a.current.params.passwordResetToken).then(function(a){d.resolve(a.data.token)})["catch"](function(){d.resolve(void 0)}),d.promise}]}}).when("/competition/run",{templateUrl:"views/run-competition.html",controller:"RunCompetitionCtrl",controllerAs:"ctrl",resolve:{questions:["$api","$q",function(a,b){var c=b.defer();return a.competition.generateQuestions().then(function(a){c.resolve(a.data)})["catch"](function(a){c.reject(a)}),c.promise}]}}).when("/practice",{templateUrl:"views/practice.html",controller:"PracticeCtrl",controllerAs:"ctrl",resolve:{questions:["$api",function(a){return a.question.getCategorizedList()}]}}).when("/manage-users",{templateUrl:"views/manage-users.html",controller:"ManageUsersCtrl",controllerAs:"ctrl",resolve:{users:["$api","$q",function(a,b){var c=b.defer();return a.user.list().then(function(a){c.resolve(a.data)})["catch"](function(a){c.reject(a)}),c.promise}],isAdmin:isAdmin}}).when("/manage-questions",{templateUrl:"views/manage-questions.html",controller:"ManageQuestionsCtrl",controllerAs:"ctrl",resolve:{questions:["$api",function(a){return a.question.list({page:1})}],categories:getCategories}}).when("/manage-welcome-page",{templateUrl:"views/manage-welcome-page.html",controller:"ManageWelcomePageCtrl",controllerAs:"ctrl",resolve:{welcomeHtml:welcomeHtml}}).otherwise({redirectTo:"/"}),b.html5Mode(!0),angular.extend(c,{extendedTimeOut:1e3,timeOut:6e3,toastClass:"toast"})}]).run(["$rootScope","$http","$location","$localStorage","$api",function(a,b,c,d,e){a.runningCompetition=!1,d.currentUser&&(b.defaults.headers.common.Authorization=d.currentUser.token,e.auth.getCurrentUser().then(function(b){"ADMIN"===b.data.role&&(a.isAdmin=!0)})),a.$on("$locationChangeStart",function(){d.currentUser&&(a.user=d.currentUser);var b=["/login","/forgot-password","/forgot-email","/reset-password"],e=!0;_.each(b,function(a){-1!==c.path().indexOf(a)&&(e=!1)}),e&&!d.currentUser&&c.path("/login")})}]).controller("NavCtrl",["AuthenticationService",function(a){this.logout=a.logout}]).constant("_",window._),angular.module("knowledgebowl").component("competitionRunner",{templateUrl:"views/components/competition-runner.html",controllerAs:"ctrl",bindings:{questions:"=",timerAmount:"=?",isPractice:"=?"},bindToController:!0,controller:["_","$interval","$api","toastr","$rootScope",function(a,b,c,d,e){e.runningCompetition=!0;var f=this;f.$onInit=function(){function e(a){document.getElementById("sound").innerHTML='<audio autoplay="autoplay" id="beep"><source src="'+a+'.mp3?1" type="audio/mpeg" /><source src="'+a+'.ogg?1" type="audio/ogg" /><embed id="beepEmbed" hidden="true" autostart="true" loop="false" src="'+a+'.mp3" /></audio>';var b=0;document.getElementById("beep").addEventListener("ended",function(){this.currentTime=0,1>b&&this.play(),b++},!1)}f.timer=f.timerAmount&&f.timerAmount>0?f.timerAmount:20,f.fontSize=20,f.currentQuestion=f.questions[0],f.currentQuestionIdx=0,f.showQuestion=!0,f.showAnswer=!1,f.time=f.timer,f.questionIdStr="",a.each(f.questions,function(a,b){f.questionIdStr+=a.id,b!==f.questions.length-1&&(f.questionIdStr+=",")}),f.setSettings=function(b){if(b.preventDefault(),f.settingsForm.$valid){var e=[];a.each(f.settings.categories,function(a){e.push(a.id)}),f.saving=!0,c.competition.generateQuestions({categories:e,numberOfQuestions:f.settings.numberOfQuestions}).then(function(a){f.timer=f.settings.timer,startCompetition(a.data)})["catch"](function(a){console.log(a),d.error("Error generating competition. Please contact support")})["finally"](function(){f.saving=!1})}},f.previousQuestion=function(){f.currentQuestionIdx>0&&(f.currentQuestionIdx--,f.currentQuestion=f.questions[f.currentQuestionIdx],f.timerStarted=!1,f.timerStopped=!1,f.showQuestion=!0,f.showAnswer=!1,b.cancel(f.runningTimer))},f.nextQuestion=function(){f.currentQuestionIdx++,console.log("Finished? ",f.currentQuestionIdx>=f.questions.length),f.currentQuestionIdx>=f.questions.length?f.competitionOver=!0:(f.currentQuestion=f.questions[f.currentQuestionIdx],f.timerStopped=!1,f.timerStarted=!1,f.showQuestion=!0,f.showAnswer=!1,f.time=f.timer),b.cancel(f.runningTimer)},f.startTimer=function(){f.time=f.timer,f.timerStarted=!0,f.runningTimer=b(function(){return f.timerStopped?(f.timerStarted=!1,f.timerStopped=!0,void b.cancel(f.timer)):(f.time--,void(0===f.time?(b.cancel(f.runningTimer),f.timerStarted=!1,f.timerStopped=!0):5===f.time&&e("audio/beep-07")))},1e3)},f.stopTimer=function(){f.timerStopped=!0},f.revealAnswer=function(){f.showQuestion=!1,f.showAnswer=!0},f.calcFontStyle=function(){return{"font-size":f.fontSize+"px"}},f.downloadAsPowerpoint=function(){var b=new PptxGenJS,c="333333";a.each(f.questions,function(a,d){var e=b.addNewSlide();e.back="FFFFFF",e.addText("#"+(d+1)+" of "+f.questions.length+" | Category: "+a.category+" | Point value: "+a.point_value,{x:.25,y:.25,font_size:14,color:c}),e.addText(a.question,{x:.25,y:1.75,font_size:14,color:c}),e.addText("Answer: "+a.answer,{x:.25,y:4,font_size:14,color:c})}),b.save("Knowledge Bowl")}}}]}),angular.module("knowledgebowl").directive("kbErrorFeedback",["$compile",function(a){return{scope:!0,terminal:!0,priority:1,link:function(b,c,d){var e=d.name,f=c[0].querySelectorAll(".form-group");if(f&&f.length)for(var g=0;g<f.length;g++){var h=f[g],i=h.querySelector("input")||h.querySelector("select")||h.querySelector("textarea");if(i){var j=(h.querySelector("input")||h.querySelector("select")||h.querySelector("textarea")).name;angular.element(h).attr("ng-class","{'has-error': "+e+".$submitted && "+e+"."+j+".$invalid}")}var k=h.querySelector("div[ng-messages]");k&&angular.element(k).attr("ng-show",e+".$submitted")}c.removeAttr("kb-error-feedback"),a(c)(b)}}}]),angular.module("knowledgebowl").directive("kbQuestionModal",["$modal","$api","toastr","_","$rootScope",function(a,b,c,d,e){return{scope:{question:"=",categories:"="},link:function(f,g,h){g.on("click",function(){var g=a({controller:function(){var a=this;a.question=f.question?d.cloneDeep(f.question):a.question,a.categories=f.categories,a.save=function(){a.questionForm.$valid&&(a.saving=!0,a.question.id?b.question.edit(a.question).then(function(){c.success("Successfully edited question!"),e.$emit("question_list_reload"),g.hide()})["catch"](function(){c.error("Error editing question. Please contact support."),g.hide()})["finally"](function(){a.saving=!1}):b.question.create(a.question).then(function(){c.success("Successfully added question!"),e.$emit("question_list_reload"),g.hide()})["catch"](function(){c.error("Error saving question. Please contact support."),g.hide()})["finally"](function(){a.saving=!1}))},a.deleteQuestion=function(){confirm("Are you sure you want to delete this question? This can't be undone.")&&(a.saving=!0,b.question.deleteQuestion(a.question.id).then(function(){c.success("Successfully deleted question."),e.$emit("question_list_reload"),g.hide()})["catch"](function(){c.error("Error deleting question. Please contact support."),g.hide()})["finally"](function(){a.saving=!1}))},a.close=function(){g.hide()}},controllerAs:"ctrl",templateUrl:"views/modals/question-form.html",show:!1});g.$promise.then(g.show)})}}}]),angular.module("knowledgebowl").directive("kbCategoryModal",["$modal","$api","toastr","_","$rootScope",function(a,b,c,d,e){return{scope:{category:"="},link:function(f,g,h){g.on("click",function(){var g=a({controller:function(){var a=this;a.category=f.category?d.cloneDeep(f.category):a.category,a.save=function(){a.categoryForm.$valid&&(a.saving=!0,a.category.id?b.category.edit(a.category).then(function(){c.success("Successfully edited category!"),e.$emit("category_list_reload"),e.$emit("question_list_reload"),g.hide()})["catch"](function(){c.error("Error editing category. Please contact support."),g.hide()})["finally"](function(){a.saving=!1}):b.category.create(a.category).then(function(){c.success("Successfully added category!"),e.$emit("category_list_reload"),e.$emit("question_list_reload"),g.hide()})["catch"](function(){c.error("Error saving category. Please contact support."),g.hide()})["finally"](function(){a.saving=!1}))},a.deleteCategory=function(){confirm("WARNING: Deleting a category deletes all questions associated with it. This cannot be undone. Are you sure you want to continue?")&&(a.saving=!0,b.category.remove(a.category.id).then(function(){c.success("Successfully deleted category."),e.$emit("category_list_reload"),e.$emit("question_list_reload"),g.hide()})["catch"](function(){c.error("Error deleting category. Please contact support."),g.hide()})["finally"](function(){a.saving=!1}))},a.close=function(){g.hide()}},controllerAs:"ctrl",templateUrl:"views/modals/category-form.html",show:!1});g.$promise.then(g.show)})}}}]),angular.module("knowledgebowl").directive("kbEditUser",["$modal","$api","toastr","_","$rootScope",function(a,b,c,d,e){return{scope:{user:"="},link:function(f,g,h){g.on("click",function(g){if(!(angular.element(g.target).hasClass("btn")||angular.element(g.target).hasClass("toggle-on")||angular.element(g.target).hasClass("toggle-off")||angular.element(g.target).hasClass("toggle-handle"))){var h=a({controller:function(){var a=this;a.user=d.cloneDeep(f.user),a.editUser=function(){a.editingUser=!0,a.editUserForm.$valid&&(a.user.password_reset_expiration||(a.user.password_reset_expiration=void 0),b.user.edit(a.user).then(function(){c.success("Successfully edited user!"),e.$emit("user_list_reload"),h.hide()})["catch"](function(){c.error("Error editing user. Please contact support."),h.hide()})["finally"](function(){a.editingUser=!1}))},a.deleteUser=function(){a.editingUser=!0,b.user.deleteUser(a.user.id).then(function(){c.success("Successfully deleted user."),e.$emit("user_list_reload"),h.hide()})["catch"](function(){c.error("Error deleting user. Please contact support."),h.hide()})["finally"](function(){a.editingUser=!1})},a.close=function(){h.hide()}},controllerAs:"ctrl",templateUrl:"views/modals/edit-user.html",show:!1});h.$promise.then(h.show)}})}}}]),angular.module("knowledgebowl").directive("equalTo",function(){return{scope:{val:"=ngModel",compareVal:"=equalTo"},require:"ngModel",link:function(a,b,c,d){var e=function(){d.$setValidity("value_compare",a.val===a.compareVal)};a.$watch("val",e),a.$watch("compareVal",e)}}}),angular.module("knowledgebowl").directive("numberRange",function(){return{scope:{min:"=?",max:"=",val:"=ngModel"},require:"ngModel",link:function(a){a.min||(a.min=1);var b=function(){var b=a.val;b>a.max?b=a.max:b<a.min?b=a.min:void 0===b&&(b=a.min),b!==a.val&&(a.val=b)};a.$watch("val",b),a.$watch("min",b),a.$watch("max",b)}}}),function(){angular.module("knowledgebowl").service("AuthenticationService",["$api","$http","$localStorage","$q","$rootScope","$location",function(a,b,c,d,e,f){return{login:function(f,g,h){var i=this,j=d.defer();return a.auth.login(f,g).then(function(a){a.data.success&&a.data.token?(c.currentUser={username:f,token:a.data.token},b.defaults.headers.common.Authorization=a.data.token,i.isAdmin().then(function(){e.isAdmin=!0,j.resolve(a)})["catch"](function(){j.resolve(a)})):j.resolve(void 0)})["catch"](function(a){j.reject(a)}),j.promise},logout:function(){delete c.currentUser,e.user=void 0,b.defaults.headers.common.Authorization="",f.path("/login")},isAdmin:function(){var b=d.defer();return a.auth.getCurrentUser().then(function(a){var c=a.data;"ADMIN"!==c.role?(b.reject(),f.path("/?error=not-admin")):(e.isAdmin=!0,b.resolve())})["catch"](function(){b.reject(),f.path("/?error=unknown-error")}),b.promise}}}])}(),angular.module("knowledgebowl").service("$api_category",["$http",function(a){return{list:function(){return a.get("/api/category/list")},create:function(b){return a.put("/api/category",b)},edit:function(b){return a.post("/api/category",b)},remove:function(b){return a["delete"]("/api/category/"+b)}}}]),angular.module("knowledgebowl").service("$api_question",["$http",function(a){return{list:function(b){return a({url:"/api/question/list",method:"GET",params:b})},listByIds:function(b){return a.get("/api/question/list-by-ids/"+b)},getCategorizedList:function(){return a.get("/api/question/list?categorize=true")},create:function(b){return a.put("/api/question",b)},edit:function(b){return a.post("/api/question",b)},deleteQuestion:function(b){return a["delete"]("/api/question/"+b)}}}]),angular.module("knowledgebowl").service("$api_customizablePage",["$http",function(a){return{get:function(b){return a.get("/api/customizable-page/"+b)},edit:function(b,c){return a.post("/api/customizable-page/"+b,{html:c})}}}]),angular.module("knowledgebowl").service("$api_auth",["$http",function(a){return{authorizePasswordResetToken:function(b){return a.get("/api/auth/password-reset-token/authorize/"+b)},getCurrentUser:function(){return a.get("/api/auth/current-user")},sendForgotPasswordEmail:function(b){return a.post("/api/auth/forgot-password",{username:b})},registerNewUser:function(b){return a.post("/api/auth/register",b)},resendCreationEmail:function(b){return a.post("/api/auth/resend-creation-email",{id:b})},resetPassword:function(b){return a.post("/api/auth/reset-password",b)},login:function(b,c){return a.post("/api/auth/login",{username:b,password:c})}}}]),angular.module("knowledgebowl").service("$api_user",["$http",function(a){return{list:function(){return a.get("/api/user/list")},listByName:function(b){return a.post("/api/user/getAllByName",b)},toggleActive:function(b,c){return a.post("/api/user/toggle-active",{data:b},c)},edit:function(b){return a.post("/api/user/edit",b)},deleteUser:function(b){return a["delete"]("/api/user/"+b)}}}]),angular.module("knowledgebowl").service("$api_competition",["$http",function(a){return{generateQuestions:function(b){var c=b?{settings:b}:void 0;return a.post("/api/competition/questions",c)}}}]),angular.module("knowledgebowl").service("$api",["$api_category","$api_question","$api_customizablePage","$api_competition","$api_user","$api_auth",function(a,b,c,d,e,f){return{category:a,question:b,customizablePage:c,competition:d,user:e,auth:f}}]),angular.module("knowledgebowl").controller("MainCtrl",["welcomeHtml",function(a){this.welcomeHtml=a}]),angular.module("knowledgebowl").controller("LoginCtrl",["AuthenticationService","$location","toastr","$rootScope",function(a,b,c,d){this.login=function(e){e.preventDefault(),this.loginForm.$valid&&a.login(this.username,this.password).then(function(a){c.success("Successfully logged in!"),a&&a.data&&a.data.success&&("ADMIN"===a.data.user.role?(d.isAdmin=!0,b.path("/admin")):b.path("/"))})["catch"](function(){c.error("Login Unsuccessful. Please try again.")})}}]),angular.module("knowledgebowl").controller("ForgotPasswordCtrl",["AuthenticationService","$location","$api",function(a,b,c){var d=this;d.submit=function(){d.forgotPasswordForm.$valid&&(d.submittingForm=!0,c.auth.sendForgotPasswordEmail(d.username).then(function(){d.submitSuccess=!0})["catch"](function(a){d.submitFailed=!0})["finally"](function(){d.submittingForm=!1}))}}]),angular.module("knowledgebowl").controller("ForgotEmailCtrl",["AuthenticationService","$location","$api",function(a,b,c){var d=this;d.emails=[],d.getEmails=function(){d.forgotEmailForm.$valid&&c.user.listByName(d.user).then(function(a){_.each(a.data,function(a){d.emails.push(a)})})["catch"](function(){d.searchError=!0})["finally"](function(){d.searchComplete=!0})}}]),angular.module("knowledgebowl").controller("ResetPasswordCtrl",["AuthenticationService","$location","$api","authorizedToken",function(a,b,c,d){var e=this;d||(e.authorizeError=!0),e.submit=function(){e.resetPasswordForm.$valid&&(e.submittingForm=!0,c.auth.resetPassword({passwordResetToken:d,newPassword:e.password}).then(function(){e.submitSuccess=!0})["catch"](function(a){e.submitFailed=!0})["finally"](function(){e.submittingForm=!1}))}}]),angular.module("knowledgebowl").controller("ManageUsersCtrl",["AuthenticationService","$location","$api","toastr","users","$timeout","$q","$rootScope",function(a,b,c,d,e,f,g,h){var i=this;i.users=e,i.addUser=function(a){a.preventDefault(),i.addUserForm.$valid&&(i.savingUser=!0,c.auth.registerNewUser(i.newUser).then(function(){i.newUser={},i.addUserForm.$setPristine(),d.success("New user registered!"),h.$emit("user_list_reload")})["catch"](function(){d.error("Error registering user. Please contact support.")})["finally"](function(){i.savingUser=!1}))},i.resendUserCreationLink=function(a){a.requires_password_reset?(i.resendingCreationEmail=!0,c.auth.resendCreationEmail(a.id).then(function(){d.success("Re-sent email to "+a.username)})["catch"](function(){d.error("Error occurred re-sending email to "+a.username+". Please contact support.")})["finally"](function(){i.resendingCreationEmail=!1})):d.error('User has already setup their account. Please ask them to click "Forget your password?" from the login screen.')};var j=void 0,k=void 0;i.toggleActive=function(a){j&&f.cancel(j),j=f(function(){k&&k.resolve(),k=g.defer(),c.user.toggleActive(a,{timeout:k.promise})},1e3)},h.$on("user_list_reload",function(){c.user.list().then(function(a){i.users=a.data})})}]),angular.module("knowledgebowl").controller("ManageWelcomePageCtrl",["$api","toastr","welcomeHtml",function(a,b,c){var d=this;d.welcomeHtml=c,d.originalWelcomeHtml=c,d.save=function(){d.saving=!0,a.customizablePage.edit("welcome-page.html",d.welcomeHtml).then(function(){d.originalWelcomeHtml=d.welcomeHtml,b.success("Successfully edited welcome page")})["catch"](function(){b.error("An error occurred while saving changes")})["finally"](function(){d.saving=!1})},d.reset=function(){d.welcomeHtml=d.originalWelcomeHtml}}]),angular.module("knowledgebowl").controller("ManageQuestionsCtrl",["$rootScope","$http","$api","$timeout","questions","categories",function(a,b,c,d,e,f){var g=this;g.pagination={},g.filters={question:"",answer:"",category_id:""},g.questions=e.data.questions,g.pagination.questions=e.data.pagination,g.categories=f;var h;a.$on("question_list_reload",function(a,b){h&&d.cancel(h),h=d(function(){b||(b=g.pagination.page),c.question.list({page:b,filters:g.filters,search:g.search}).then(function(a){g.questions=a.data.questions,g.pagination.questions=a.data.pagination})},350)}),a.$on("category_list_reload",function(){c.category.list().then(function(a){g.categories=a.data})}),g.questionsPageChanged=function(b){a.$emit("question_list_reload",b)},g.doSearch=function(){a.$emit("question_list_reload")}}]),angular.module("knowledgebowl").controller("RunCompetitionCtrl",["questions","$location",function(a,b){console.log(a);var c=this;c.questions=a,b.search("1",null)}]),angular.module("knowledgebowl").controller("PracticeCompetitionCtrl",function(){}),angular.module("knowledgebowl").controller("PracticeCtrl",["$window","questions","_","$modal","$rootScope","$location",function(a,b,c,d,e,f){var g=this;f.search("1",null),g.questionMap=b.data.questions,g.globalFilters=void 0,g.showAnswersForAll=!0,g.showAnswers={},g.showAnswersMap={},g.questionsSelected={},g.availableCategories=[],g.selectedCategories=[],c.each(g.questionMap,function(a,b){g.availableCategories.push(b),g.showAnswers[b]=!0,g.questionsSelected[b]="All"}),e.$watch(function(){return g.selectedCategories},function(a,b){var d=[];c.each(a,function(a){-1===b.indexOf(a)&&d.push(a)}),c.each(d,function(a){g.globalFilters?g.applyGlobalFilters(a):g.clearFilters(a)})}),g.runCompetition=function(){const a=[];d({size:"small",templateUrl:"views/modals/practice-competition-settings.html",controllerAs:"ctrl",controller:["$scope",function(b){var d=this;d.timerAmount=20,d.cancel=function(){b.$hide()},d.submit=function(){g.runningCompetition=!0,g.competitionTimerAmount=d.timerAmount,c.each(g.questionMap,function(b,d){-1!==g.selectedCategories.indexOf(d)&&c.each(b,function(b){b.show&&a.push(b)})}),console.log("RUNNIING WITH TIMER AMOUNT: ",g.competitionTimerAmount),g.competitionQuestions=c.shuffle(a),b.$hide()}}]})},g.printQuiz=function(){a.print()},g.applyGlobalFilters=function(a){if(g.globalFilters){var b=[];if(c.each(g.questionMap[a],function(a){a.show=!0}),g.globalFilters.range&&c.each(g.questionMap[a],function(a,b){a.show=b+1>=g.globalFilters.range.min&&b+1<=g.globalFilters.range.max}),g.globalFilters.randomize){var d=g.globalFilters.randomize;if(d){var e=c.sampleSize(c.filter(g.questionMap[a],{show:!0}),d);c.each(g.questionMap[a],function(a){a.show=!!c.find(e,{id:a.id})})}}c.each(g.questionMap[a],function(a,c){a.show&&b.push(c+1)}),g.questionsSelected[a]=b.join(", ")||"All"}},g.applyFilters=function(a,b){var d=!0;g.questionsSelected[a]="",c.each(b,function(b,c){g.questionMap[a][c].show=b.show,g.questionMap[a][c].show?g.questionsSelected[a]?g.questionsSelected[a]+=", "+(c+1):g.questionsSelected[a]=c+1+"":d=!1}),d&&(g.questionsSelected[a]="All")},g.clearAllFilters=function(){g.globalFilters=void 0,c.each(g.questionMap,function(a,b){g.questionsSelected[b]="All",c.each(a,function(a){a.show=!0})})},g.clearFilters=function(a){g.questionsSelected[a]="All",c.each(g.questionMap[a],function(a){a.show=!0})},g.globalFilterModal=function(){d({size:"large",templateUrl:"views/modals/global-category-filter.html",controllerAs:"ctrl",controller:["$scope",function(a){var b=this;b.globalFilters=void 0,b.questionRange={min:1,max:99},b.cancel=function(){a.$hide()},b.applyFilters=function(){b.globalFilters&&(g.globalFilters=b.globalFilters,c.each(g.selectedCategories,function(a){g.applyGlobalFilters(a)})),a.$hide()},b.applyRandomization=function(a){b.globalFilters={randomize:a}},b.applyRange=function(a,c,d){b.globalFilters={range:{min:a,max:c}},d&&(b.globalFilters.randomize=d)},b.selectRandomization=function(){d({templateUrl:"views/modals/global-category-filter__randomization.html",controllerAs:"ctrl",controller:["$scope",function(a){var c=this;c.questionRange=b.questionRange,c.amount=50,c.cancel=function(){a.$hide()},c.applyRandomization=function(){b.applyRandomization(c.amount),a.$hide()}}]})},b.selectRange=function(){d({templateUrl:"views/modals/global-category-filter__range.html",controllerAs:"ctrl",controller:["$scope",function(a){var c=this;c.range={min:1,max:b.questionRange.max,options:{floor:1,ceil:b.questionRange.max}},c.maxPossibleResults=function(){return c.range.max-c.range.min+1},c.cancel=function(){a.$hide()},c.applyRange=function(){b.applyRange(c.range.min,c.range.max,c.randomizeResults&&c.numQuestions),a.$hide()}}],resolve:{questions:function(){return c.cloneDeep(b.questions)},category:function(){return b.category}}})}}]})},g.advancedFilterModal=function(a){var b=g.questionMap[a];d({size:"large",templateUrl:"views/modals/advanced-category-filter.html",controllerAs:"ctrl",controller:["$scope","questions","category",function(a,b,e){var f=this;f.questions=b,f.category=e,f.cancel=function(){a.$hide()},f.applyFilters=function(){g.applyFilters(f.category,f.questions),a.$hide()},f.applyRange=function(a,b){if(c.each(f.questions,function(b,c){b.show=!(c+1<a.min||c+1>a.max)}),b){var d=c.sampleSize(c.filter(f.questions,{show:!0}),b);f.applyRandomization(d)}},f.applyRandomization=function(a){c.each(f.questions,function(b){b.show=!!c.find(a,{id:b.id})})},f.selectRandomization=function(){d({templateUrl:"views/modals/advanced-category-filter__randomization.html",controllerAs:"ctrl",controller:["$scope","questions","category",function(a,b,d){var e=this;e.questions=b,e.category=d,e.amount=b.length/2,e.cancel=function(){a.$hide()},e.applyRandomization=function(){f.applyRandomization(c.sampleSize(e.questions,e.amount)),a.$hide()}}],resolve:{questions:function(){return c.cloneDeep(f.questions)},category:function(){return f.category}}})},f.selectRange=function(){d({templateUrl:"views/modals/advanced-category-filter__range.html",controllerAs:"ctrl",controller:["$scope","questions","category",function(a,b,c){var d=this;d.questions=b,d.category=c,d.range={min:1,max:d.questions.length,options:{floor:1,ceil:d.questions.length}},d.maxPossibleResults=d.questions.length;var e=function(){d.maxPossibleResults=d.range.max-d.range.min+1};a.$watch(function(){return d.range.min},e),a.$watch(function(){return d.range.max},e),d.cancel=function(){a.$hide()},d.applyRange=function(){f.applyRange(d.range,d.randomizeResults&&d.numQuestions),a.$hide()}}],resolve:{questions:function(){return c.cloneDeep(f.questions)},category:function(){return f.category}}})},f.manuallySelect=function(){f.showManualSelections=!0,f.manualSelections=c.cloneDeep(b),c.each(f.manualSelections,function(a,b){f.manualSelections[b].show=!1})},f.discardManualSelections=function(){f.showManualSelections=!1},f.rangeSelections=[],f.addRangeSlider=function(){f.rangeSelections.push({min:1,max:f.questions.length,options:{floor:1,ceil:f.questions.length}})},f.removeRangeSlider=function(a){f.rangeSelections.splice(a,1)}}],resolve:{category:function(){return a},questions:function(){return c.cloneDeep(b)}}})},g.toggleShowAllAnswerInput=function(){c.each(g.showAnswers,function(a,b){g.showAnswers[b]=g.showAnswersForAll})},g.showAnswerChanged=function(){var a=!0,b=!0;c.each(g.selectedCategories,function(c){g.showAnswers[c]?b=!1:a=!1}),a?g.showAnswersForAll=!0:b&&(g.showAnswersForAll=!1)}}]),angular.module("knowledgebowl").controller("PrintCompetitionCtrl",["$window","questions",function(a,b){var c=this;c.questions=b,c.print=function(){a.print()}}]),angular.module("knowledgebowl").run(["$templateCache",function(a){a.put("views/components/competition-runner.html",'<div id="question-viewer" ng-hide="ctrl.competitionOver"> <section class="question-meta"> <div><strong>Question {{ctrl.currentQuestionIdx+1}} of {{::ctrl.questions.length}}</strong></div> <div>Category: <strong>{{ctrl.currentQuestion.category}}</strong></div> <div>Point Value: <strong>{{ctrl.currentQuestion.point_value}}</strong></div> <div class="timer" ng-show="ctrl.timerStarted"> {{ctrl.time}} seconds remaining </div> <div> <a class="btn btn-primary" ng-href="/print-competition?idList={{ctrl.questionIdStr}}" target="_blank">Print competition</a> </div> <div> <button class="btn btn-success" ng-click="ctrl.downloadAsPowerpoint()">Download</button> </div> </section> <div class="question" ng-style="ctrl.calcFontStyle()"> <span ng-show="ctrl.showQuestion">{{ ctrl.currentQuestion.question }}</span> <span ng-show="ctrl.showAnswer">{{ ctrl.currentQuestion.answer }}</span> </div> <div class="controls"> <div class="form-group font-size"> <label for="font-size">Font Size</label> <input type="number" ng-model="ctrl.fontSize" id="font-size" name="font-size" min="1"> </div> <button class="btn btn-default" ng-click="ctrl.previousQuestion()">Previous Question</button> <button class="btn btn-primary" ng-click="ctrl.startTimer()" ng-show="!ctrl.timerStarted && !ctrl.timerStopped && ctrl.settings.timer !== 0">Start timer</button> <button class="btn btn-primary" ng-click="ctrl.stopTimer()" ng-show="ctrl.timerStarted && !ctrl.timerStopped">Stop Timer</button> <button class="btn btn-primary" ng-click="ctrl.revealAnswer()" ng-show="(ctrl.timerStopped && !ctrl.showAnswer) || ctrl.settings.timer === 0">Show Answer</button> <button class="btn btn-primary" ng-click="ctrl.nextQuestion()">Next Question</button> </div> </div> <div id="competitionOver" ng-show="ctrl.competitionOver"> {{ ctrl.isPractice ? \'Practice\' : \'Competition\' }} over </div>'),a.put("views/forgot-email.html",'<form name="ctrl.forgotEmailForm" novalidate ng-submit="ctrl.getEmails()"> <div class="row" ng-show="!ctrl.searchComplete"> <div class="form-group col-xs-12 col-sm-offset-3 col-sm-6"> <label for="firstName">Please enter your first name</label> <input type="text" name="firstName" id="firstName" class="form-control" ng-model="ctrl.user.firstName" required> <div ng-messages="ctrl.forgotEmailForm.firstName.$error"> <div ng-message="required">Required</div> </div> </div> <div class="form-group col-xs-12 col-sm-offset-3 col-sm-6"> <label for="lastName">Please enter your last name</label> <input type="text" name="lastName" id="lastName" class="form-control" ng-model="ctrl.user.lastName" required> <div ng-messages="ctrl.forgotEmailForm.lastName.$error"> <div ng-message="required">Required</div> </div> </div> <div class="form-group col-xs-12"> <button type="submit" class="btn btn-primary col-xs-12 col-sm-offset-5 col-sm-2"> Submit </button> </div> </div> <div class="row" ng-show="ctrl.emails.length"> <div class="col-xs-12 col-sm-offset-2 col-sm-8 text-center"> <h4>Here is a list of all emails with that name. Please look through them and determine if any look like yours. If you still cannot find your email, please contact support.</h4> <ul style="font-size: 1.25em; font-weight: bold"> <li style="list-style: none" ng-repeat="email in ctrl.emails">{{email}}</li> </ul> </div> </div> <div class="row" ng-show="ctrl.searchComplete && !ctrl.emails.length && !ctrl.searchError"> <div class="col-xs-12 col-sm-offset-2 col-sm-8 text-center"> <h3>No emails found with that first and last name. If you believe this is an error, please contact support.</h3> </div> </div> <div class="row" ng-show="ctrl.searchError"> <div class="col-xs-12 col-sm-offset-2 col-sm-8 text-center"> <h3>An error occurred while attempting to search for emails with that name. Please try again.</h3> </div> </div> </form>'),a.put("views/forgot-password.html",'<form name="ctrl.forgotPasswordForm" novalidate ng-submit="ctrl.submit()"> <div class="row" ng-show="!ctrl.submitSuccess && !ctrl.submitFailed"> <div class="form-group col-xs-12 col-sm-offset-3 col-sm-6"> <label for="username">Please enter your email</label> <input type="email" name="username" id="username" class="form-control" ng-model="ctrl.username" required> <div ng-messages="ctrl.forgotPasswordForm.username.$error"> <div ng-message="required">Required.</div> <div ng-message="email">Invalid email.</div> </div> </div> <div class="form-group col-xs-12"> <button type="submit" class="btn btn-primary col-xs-12 col-sm-offset-5 col-sm-2"> Submit </button> </div> </div> <div class="row" ng-show="!ctrl.submitSuccess && !ctrl.submitFailed"> <div class="col-xs-12 text-center"> <a href="/forgot-email" style="font-size: 1.25em">Forget your email?</a> </div> </div> <div class="row" ng-show="ctrl.submitSuccess"> <div class="col-xs-12 col-sm-offset-2 col-sm-8 text-center"> <h3>An email has been sent to your address with instructions on how to reset your password</h3> </div> </div> <div class="row" ng-show="ctrl.submitFailed"> <div class="col-xs-12 col-sm-offset-2 col-sm-8 text-center"> <h3>An error occurred while attempting to send your email. Please try again.</h3> </div> </div> </form>'),
a.put("views/login.html",'<div class="row"> <form name="ctrl.loginForm" novalidate ng-submit="ctrl.login($event)"> <div class="form-group col-xs-12 col-sm-offset-3 col-sm-6"> <label for="username">Email</label> <input type="email" name="username" id="username" class="form-control input-lg" ng-model="ctrl.username" required> </div> <div class="form-group col-xs-12 col-sm-offset-3 col-sm-6"> <label for="password">Password</label> <input type="password" name="password" id="password" class="form-control input-lg" ng-model="ctrl.password" required> </div> <div class="form-group col-xs-12"> <button type="submit" class="btn btn-primary col-xs-12 col-sm-offset-5 col-sm-2"> Login </button> </div> </form> </div> <div class="row"> <div class="col-xs-12 text-center" style="font-size: 1.25em"> <a href="/forgot-password" class="text-center">Forget your password?</a> </div> </div>'),a.put("views/main.html",'<div class="jumbotron" id="main"> <div ng-bind-html="ctrl.welcomeHtml"></div> </div>'),a.put("views/manage-questions.html",'<div class="panel panel-default"> <!-- Default panel contents --> <div class="panel-heading"> <h3>Manage Categories</h3> <button type="button" class="btn btn-success pull-right" kb-category-modal category="category">Add new</button> </div> <div class="panel-body scrollable _450"> <!-- Table --> <table class="table table-hover"> <thead> <tr> <th>Category</th> </tr> </thead> <tbody> <tr ng-repeat="category in ctrl.categories" kb-category-modal category="category"> <td>{{::category.category}}</td> </tr> </tbody> </table> </div> </div> <div class="panel panel-default"> <!-- Default panel contents --> <div class="panel-heading"> <h3>Manage Questions</h3> <button type="button" class="btn btn-success pull-right" kb-question-modal categories="ctrl.categories">Add new</button> </div> <div class="panel-body"> <div class="row"> <div class="col-xs-12"> <!-- Table --> <dir-pagination-controls on-page-change="ctrl.questionsPageChanged(newPageNumber)"></dir-pagination-controls> <input type="text" class="form-control pull-right" ng-model="ctrl.search" ng-change="ctrl.doSearch()" placeholder="Search by question or answer" ng-model-options="{debounce: 350}"> <table class="table table-hover"> <thead> <tr> <th> Question<br> <input type="text" class="form-control" ng-model="ctrl.filters.question" ng-change="ctrl.doSearch()"> </th> <th> Answer<br> <input type="text" class="form-control" ng-model="ctrl.filters.answer" ng-change="ctrl.doSearch()"> </th> <th>Point Value<br>&nbsp;</th> <th> Category<br> <select class="form-control" ng-model="ctrl.filters.category_id" ng-change="ctrl.doSearch()"> <option value="">Filter by category</option> <option ng-repeat="category in ctrl.categories" value="{{category.id}}">{{category.category}}</option> </select> </th> </tr> </thead> <tbody> <tr dir-paginate="question in ctrl.questions | itemsPerPage: 25" total-items="ctrl.pagination.questions.rowCount" current-page="ctrl.pagination.questions.page" kb-question-modal question="question" categories="ctrl.categories"> <td>{{::question.question}}</td> <td>{{::question.answer}}</td> <td>{{::question.point_value}}</td> <td>{{::question.category}}</td> </tr> </tbody> </table> </div> </div> </div> </div>'),a.put("views/manage-users.html",'<div class="panel panel-default panel-form"> <!-- Default panel contents --> <div class="panel-heading"><h3>Add New User</h3></div> <div class="panel-body"> <div class="row"> <form name="ctrl.addUserForm" ng-submit="ctrl.addUser($event)" novalidate kb-error-feedback> <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3" ng-class="{\'has-error\': ctrl.showError(\'addUserForm.username\')}"> <label for="last_name">Email</label> <input class="form-control" type="email" ng-model="ctrl.newUser.username" id="username" name="username" required> <div ng-messages="ctrl.addUserForm.username.$error" ng-show="ctrl.addUserForm.$submitted"> <div ng-message="required">Required</div> <div ng-message="email">Invalid email address</div> </div> </div> <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3"> <label for="first_name">First Name</label> <input class="form-control" type="text" ng-model="ctrl.newUser.first_name" id="first_name" name="first_name" required> <div ng-messages="ctrl.addUserForm.first_name.$error"> <div ng-message="required">Required</div> </div> </div> <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3"> <label for="last_name">Last Name</label> <input class="form-control" type="text" ng-model="ctrl.newUser.last_name" id="last_name" name="last_name" required> <div ng-messages="ctrl.addUserForm.last_name.$error"> <div ng-message="required">Required</div> </div> </div> <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3"> <label for="role">Role Level</label> <select class="form-control" name="user_role" ng-model="ctrl.newUser.role" id="role" name="role" required> <option value="">Select a Role</option> <option value="USER">Regular User</option> <option value="ADMIN">Admin</option> </select> <div ng-messages="ctrl.addUserForm.user_role.$error"> <div ng-message="required">Required</div> </div> </div> <div class="col-xs-12"> <button class="btn btn-primary" type="submit" ng-disabled="ctrl.savingUser">Add User</button> </div> </form> </div> </div> </div> <div class="panel panel-default"> <!-- Default panel contents --> <div class="panel-heading"><h3>Manage Users</h3></div> <div class="panel-body"> <p>Use the table below to manage existing users.</p> </div> <!-- Table --> <table class="table table-hover" ts-wrapper> <thead> <tr> <th ts-criteria="last_name">Name</th> <th ts-criteria="username">Email</th> <th ts-criteria="role">Role Level</th> <th>Active</th> <th>Actions</th> </tr> </thead> <tbody> <tr ng-repeat="user in ctrl.users track by user.id" kb-edit-user user="user" ts-repeat ng-show="user.first_name"> <td>{{::user.first_name}} {{::user.last_name}}</td> <td>{{::user.username}}</td> <td>{{::(user.role === \'USER\' ? \'Regular User\' : \'Admin\')}}</td> <td> <toggle ng-model="user.active" on="Yes" off="No" size="btn-xs" ng-change="ctrl.toggleActive(user)"></toggle> </td> <td> <button ng-disabled="ctrl.resendingCreationEmail" ng-click="ctrl.resendUserCreationLink(user)" class="btn btn-sm btn-default">Resend creation email</button> </td> </tr> </tbody> </table> </div>'),a.put("views/manage-welcome-page.html",'<div class="row"> <div class="col-xs-12"> <h1>Edit Welcome Page</h1> <text-angular ng-model="ctrl.welcomeHtml"></text-angular> <div class="rte-controls"> <button class="btn btn-primary" type="button" ng-click="ctrl.save()" ng-disabled="ctrl.saving">Save</button> <button class="btn btn-default" type="button" ng-click="ctrl.reset()">Reset</button> </div> </div> </div> <div class="row"> <div class="col-xs-12"> <h2>Preview:</h2> <div class="jumbotron" id="main"> <div ng-bind-html="ctrl.welcomeHtml"></div> </div> </div> </div>'),a.put("views/modals/advanced-category-filter.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.advancedCategoryForm" ng-submit="ctrl.applyFilters()" novalidate kb-error-feedback> <input type="hidden" ng-model="ctrl.category.id"> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.close()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Filter {{ctrl.category}} category</h4> </div> <div class="modal-body clearfix"> <p>Check off questions you would like, or use the buttons below.</p> <div> <button type="button" class="btn btn-default" ng-click="ctrl.selectRange()">Select range</button> <button type="button" class="btn btn-default" ng-click="ctrl.selectRandomization()">Randomize</button> <button type="submit" class="btn btn-primary">Apply</button> </div> <div style="margin-top: 15px"> <div ng-repeat="question in ctrl.questions"> <input type="checkbox" ng-model="question.show"> #{{$index+1}} </div> </div> <!--<div style="margin-top: 15px;"><button type="button" class="btn btn-default" ng-click="ctrl.addRangeSlider()">Add question range</button></div>--> </div> <div class="modal-footer"> <div class="row"> <div class="col-xs-12"> <button type="button" class="btn btn-default" ng-click="ctrl.cancel()">Cancel</button> <button type="submit" class="btn btn-primary">Apply</button> </div> </div> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/modals/advanced-category-filter__randomization.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.advancedCategoryForm__randomization" ng-submit="ctrl.applyRandomization()" novalidate kb-error-feedback> <input type="hidden" ng-model="ctrl.category.id"> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.close()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Filter {{ctrl.category}} category: randomize</h4> </div> <div class="modal-body clearfix"> <p>Select the number of random questions you want</p> <rzslider rz-slider-model="ctrl.amount" rz-slider-options="{floor: 1, ceil: ctrl.questions.length}"></rzslider> </div> <div class="modal-footer"> <div class="row"> <div class="col-xs-12"> <button type="button" class="btn btn-default" ng-click="ctrl.cancel()">Cancel</button> <button type="submit" class="btn btn-primary">Apply</button> </div> </div> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/modals/advanced-category-filter__range.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.advancedCategoryForm__range" ng-submit="ctrl.applyRange()" novalidate kb-error-feedback> <input type="hidden" ng-model="ctrl.category.id"> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.close()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Filter {{ctrl.category}} category: select range</h4> </div> <div class="modal-body clearfix"> max possible: {{ctrl.maxPossibleResults}} <p>Select a range of questions to select</p> <input type="hidden" ng-model="ctrl.range.min" ng-change="ctrl.updateMaxPossibleResults()" name="minSelection"> <input type="hidden" ng-model="ctrl.range.max" ng-change="ctrl.updateMaxPossibleResults()" name="maxSelection"> <rzslider rz-slider-model="ctrl.range.min" rz-slider-high="ctrl.range.max" rz-slider-options="ctrl.range.options"></rzslider> <div class="checkbox"> <label> <input type="checkbox" ng-model="ctrl.randomizeResults"> Randomize results </label> </div> <div uib-collapse="!ctrl.randomizeResults"> <div class="row"> <div class="col-xs-12"> <label class="control-label" for="numQuestions"> Number of questions to randomly select </label> </div> </div> <div class="row"> <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3"> <input number-range min="ctrl.range.options.floor" max="ctrl.maxPossibleResults" class="form-control" type="number" ng-model="ctrl.numQuestions" name="numQuestions" id="numQuestions"> </div> </div> </div> </div> <div class="modal-footer"> <div class="row"> <div class="col-xs-12"> <button type="button" class="btn btn-default" ng-click="ctrl.cancel()">Cancel</button> <button type="submit" class="btn btn-primary">Apply</button> </div> </div> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/modals/category-form.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.categoryForm" ng-submit="ctrl.save($event)" novalidate kb-error-feedback> <input type="hidden" ng-model="ctrl.category.id"> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.close()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">{{ ctrl.category.id ? \'Edit\' : \'Add\' }} Category</h4> </div> <div class="modal-body clearfix"> <div class="form-group col-xs-12"> <label for="category">Category</label> <input class="form-control" type="text" ng-model="ctrl.category.category" id="category" name="category" required> <div ng-messages="ctrl.categoryForm.category.$error" ng-show="ctrl.categoryForm.$submitted"> <div ng-message="required">Required</div> </div> </div> </div> <div class="modal-footer"> <div class="row"> <div class="col-xs-12"> <button type="button" class="btn btn-default" ng-click="ctrl.close()">Close</button> <button type="button" class="btn btn-danger" ng-click="ctrl.deleteCategory()" ng-disabled="ctrl.saving">Delete Category</button> <button type="submit" class="btn btn-primary" ng-disabled="ctrl.saving">Save changes</button> </div> </div> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/modals/edit-user.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.editUserForm" ng-submit="ctrl.editUser($event)" novalidate kb-error-feedback> <input type="hidden" ng-model="ctrl.user.id"> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.close()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Edit User</h4> </div> <div class="modal-body clearfix"> <div class="form-group col-xs-12 col-sm-6"> <label for="last_name">Email</label> <input class="form-control" type="email" ng-model="ctrl.user.username" id="username" name="username" required> <div ng-messages="ctrl.editUserForm.username.$error" ng-show="ctrl.editUserForm.$submitted"> <div ng-message="required">Required</div> <div ng-message="email">Invalid email address</div> </div> </div> <div class="form-group col-xs-12 col-sm-6"> <label for="first_name">First Name</label> <input class="form-control" type="text" ng-model="ctrl.user.first_name" id="first_name" name="first_name" required> <div ng-messages="ctrl.editUserForm.first_name.$error"> <div ng-message="required">Required</div> </div> </div> <div class="form-group col-xs-12 col-sm-6"> <label for="last_name">Last Name</label> <input class="form-control" type="text" ng-model="ctrl.user.last_name" id="last_name" name="last_name" required> <div ng-messages="ctrl.editUserForm.last_name.$error"> <div ng-message="required">Required</div> </div> </div> <div class="form-group col-xs-12 col-sm-6"> <label for="role">Role Level</label> <select class="form-control" name="role" ng-model="ctrl.user.role" id="role" name="role" required> <option value="">Select a Role</option> <option value="USER">Regular User</option> <option value="ADMIN">Admin</option> </select> <div ng-messages="ctrl.editUserForm.user_role.$error"> <div ng-message="required">Required</div> </div> </div> </div> <div class="modal-footer"> <button type="button" class="btn btn-default" ng-click="ctrl.close()">Close</button> <button type="button" class="btn btn-danger" ng-click="ctrl.deleteUser()" ng-disabled="ctrl.editingUser">Delete User</button> <button type="submit" class="btn btn-primary" ng-disabled="ctrl.editingUser">Save changes</button> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/modals/global-category-filter.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.globalCategoryForm" ng-submit="ctrl.applyFilters()" novalidate kb-error-feedback> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.cancel()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Global filters</h4> </div> <div class="modal-body clearfix"> <div ng-show="!ctrl.globalFilters"> <p>Use the options below to apply a range or randomize all questions.</p> <div> <button type="button" class="btn btn-default" ng-click="ctrl.selectRange()">Select range</button> <button type="button" class="btn btn-default" ng-click="ctrl.selectRandomization()">Randomize all questions</button> <button type="submit" class="btn btn-primary">Apply</button> </div> </div> <div ng-show="ctrl.globalFilters"> <div ng-show="ctrl.globalFilters.range && !ctrl.globalFilters.randomize"> Selecting questions {{ ctrl.globalFilters.range.min }} - {{ ctrl.globalFilters.range.max }} </div> <div ng-show="ctrl.globalFilters.randomize"> Selecting {{ ctrl.globalFilters.randomize }} random questions{{ ctrl.globalFilters.range ? \' from questions \' + ctrl.globalFilters.range.min + \' - \' + ctrl.globalFilters.range.max : \'.\' }} </div> <a href="#" ng-click="ctrl.globalFilters = undefined"> <strong> Undo </strong> </a> </div> </div> <div class="modal-footer"> <div class="row"> <div class="col-xs-12"> <button type="button" class="btn btn-default" ng-click="ctrl.cancel()">Cancel</button> <button type="submit" class="btn btn-primary">Apply</button> </div> </div> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/modals/global-category-filter__randomization.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.globalCategoryForm__randomization" ng-submit="ctrl.applyRandomization()" novalidate kb-error-feedback> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.cancel()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Global filters: randomize</h4> </div> <div class="modal-body clearfix"> <p>Select the number of questions per category to randomly select</p> <rzslider rz-slider-model="ctrl.amount" rz-slider-options="{floor: ctrl.questionRange.min, ceil: ctrl.questionRange.max}"></rzslider> </div> <div class="modal-footer"> <div class="row"> <div class="col-xs-12"> <button type="button" class="btn btn-default" ng-click="ctrl.cancel()">Cancel</button> <button type="submit" class="btn btn-primary">Apply</button> </div> </div> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/modals/global-category-filter__range.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.advancedCategoryForm__range" ng-submit="ctrl.applyRange()" novalidate kb-error-feedback> <input type="hidden" ng-model="ctrl.category.id"> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.close()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Global filters: select range</h4> </div> <div class="modal-body clearfix"> <p>Select a range of questions to select</p> <input type="hidden" ng-model="ctrl.range.min" name="minSelection"> <input type="hidden" ng-model="ctrl.range.max" name="maxSelection"> <rzslider rz-slider-model="ctrl.range.min" rz-slider-high="ctrl.range.max" rz-slider-options="ctrl.range.options"></rzslider> <div class="checkbox"> <label> <input type="checkbox" ng-model="ctrl.randomizeResults"> Randomize results </label> </div> <div uib-collapse="!ctrl.randomizeResults"> <div class="row"> <div class="col-xs-12"> <label class="control-label" for="numQuestions"> Number of questions per category to randomly select </label> </div> </div> <div class="row"> <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3"> <input number-range min="ctrl.range.options.floor" max="ctrl.maxPossibleResults()" class="form-control" type="number" ng-model="ctrl.numQuestions" name="numQuestions" id="numQuestions"> </div> </div> </div> </div> <div class="modal-footer"> <div class="row"> <div class="col-xs-12"> <button type="button" class="btn btn-default" ng-click="ctrl.cancel()">Cancel</button> <button type="submit" class="btn btn-primary">Apply</button> </div> </div> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/modals/practice-competition-settings.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.practiceCompetitionSettingsForm" ng-submit="ctrl.submit()" novalidate kb-error-feedback> <input type="hidden" ng-model="ctrl.user.id"> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.cancel()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Practice competition</h4> </div> <div class="modal-body clearfix"> <p>Enter a timer amount for each question.</p> <div class="form-group col-xs-12 col-sm-6"> <label for="timer">Timer amount</label> <input class="form-control" type="number" ng-model="ctrl.timerAmount" id="timer" min="1" name="timer" required> <div ng-messages="ctrl.editUserForm.username.$error" ng-show="ctrl.editUserForm.$submitted"> <div ng-message="required">Required</div> <div ng-message="min">Timer must be at least 1 second</div> </div> </div> </div> <div class="modal-footer"> <button type="button" class="btn btn-default" ng-click="ctrl.cancel()">Close</button> <button type="submit" class="btn btn-primary">Start</button> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/modals/question-form.html",'<div class="modal"> <div class="modal-dialog"> <div class="modal-content"> <form name="ctrl.questionForm" ng-submit="ctrl.save($event)" novalidate kb-error-feedback> <input type="hidden" ng-model="ctrl.question.id"> <div class="modal-header"> <button type="button" class="close" aria-label="Close" ng-click="ctrl.close()"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">{{ ctrl.question.id ? \'Edit\' : \'Add\' }} Question</h4> </div> <div class="modal-body clearfix"> <div class="form-group col-xs-12"> <label for="question">Question</label> <textarea class="form-control" type="text" ng-model="ctrl.question.question" id="question" name="question" required></textarea> <div ng-messages="ctrl.questionForm.question.$error" ng-show="ctrl.questionForm.$submitted"> <div ng-message="required">Required</div> </div> </div> <div class="form-group col-xs-12"> <label for="answer">Answer</label> <textarea class="form-control" type="text" ng-model="ctrl.question.answer" id="answer" name="answer" required></textarea> <div ng-messages="ctrl.questionForm.answer.$error"> <div ng-message="required">Required</div> </div> </div> <div class="form-group col-xs-12 col-sm-6"> <label for="answer">Point Value</label> <input class="form-control" type="number" ng-model="ctrl.question.point_value" id="point_value" name="point_value" required> <div ng-messages="ctrl.questionForm.point_value.$error"> <div ng-message="required">Required</div> <div ng-message="number">Please enter a valid number.</div> </div> </div> <div class="form-group col-xs-12 col-sm-6"> <label for="category">Category</label> <select class="form-control" name="category" id="category" ng-options="category.id as category.category for category in ctrl.categories" ng-model="ctrl.question.category_id" required> <option value="">Select a category</option> </select> <div ng-messages="ctrl.questionForm.category.$error"> <div ng-message="required">Required.</div> </div> </div> </div> <div class="modal-footer"> <div class="row"> <div class="col-xs-12"> <button type="button" class="btn btn-default" ng-click="ctrl.close()">Close</button> <button type="button" class="btn btn-danger" ng-click="ctrl.deleteQuestion()" ng-disabled="ctrl.saving">Delete Question</button> <button type="submit" class="btn btn-primary" ng-disabled="ctrl.saving">Save changes</button> </div> </div> </div> </form> </div><!-- /.modal-content --> </div> </div>'),a.put("views/practice-competition.html","hello"),a.put("views/practice.html",'<style type="text/css" media="print">@page {\n    size: auto;   /* auto is the initial value */\n    margin: 1.5cm 0; /* this affects the margin in the printer settings */\n  }</style> <div ng-if="ctrl.runningCompetition"> <competition-runner questions="ctrl.competitionQuestions" timer-amount="ctrl.competitionTimerAmount" is-practice="true"></competition-runner> </div> <div ng-if="!ctrl.runningCompetition"> <section class="controls"> <div class="panel panel-default"> <div class="panel-heading"> <h3>Practice</h3> </div> <div class="panel-body"> <h4>Categories</h4> <div class="form-group col-sm-6"> <multiselect id="categories-select" ng-model="ctrl.selectedCategories" options="ctrl.availableCategories" show-select-all="true" show-unselect-all="true" id-prop="id" display-prop="category"></multiselect> </div> <div class="form-group col-sm-6"> <div class="checkbox"> <label> <input type="checkbox" ng-model="ctrl.showAnswersForAll" ng-click="ctrl.toggleShowAllAnswerInput()"> Show/Hide answers for all categories </label> </div> <div class="checkbox"> <label> <input type="checkbox" ng-model="ctrl.showCategoriesWithQuestion" ng-click="ctrl.toggleShowAllAnswerInput()"> Show category for each question </label> </div> </div> <div ng-show="ctrl.selectedCategories.length"> <div class="row"> <div class="col-xs-12"> <hr> </div> </div> <h4>Actions</h4> <div class="col-xs-12 form-group"> <button type="button" class="btn btn-primary" ng-click="ctrl.runCompetition()"> Run practice competition </button> <button type="button" class="btn btn-success" ng-show="ctrl.selectedCategories.length" ng-click="ctrl.printQuiz()"> Print quiz </button> </div> </div> <div class="advanced col-xs-12" ng-show="ctrl.selectedCategories.length"> <div class="row"> <hr> <h4>Selected questions</h4> <div class="col-xs-12"> <button type="button" class="btn btn-default btn-sm" ng-click="ctrl.globalFilterModal()"> <i class="fa fa-globe"></i> Global filters{{ ctrl.globalFilters ? \': \' : \'\' }} <span ng-show="ctrl.globalFilters"> <span ng-show="ctrl.globalFilters.range && !ctrl.globalFilters.randomize"> questions {{ ctrl.globalFilters.range.min }}-{{ ctrl.globalFilters.range.max }} </span> <span ng-show="ctrl.globalFilters.randomize"> random {{ ctrl.globalFilters.randomize }} {{ ctrl.globalFilters.range ? \' from questions \' + ctrl.globalFilters.range.min + \'-\' + ctrl.globalFilters.range.max : \'questions\' }} </span> </span> </button> <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.clearAllFilters()">Clear all filters</button> </div> </div> <div class="row"> <div class="col-xs-12"> <table class="table"> <thead> <tr> <th>Category</th> <th>Questions selected</th> <th>Show answers</th> <th>Actions</th> </tr> </thead> <tbody> <tr ng-repeat="(category, questionArr) in ctrl.questionMap" ng-if="ctrl.selectedCategories.indexOf(category) !== -1"> <td>{{category}}</td> <td>{{ctrl.questionsSelected[category]}}</td> <td> <input type="checkbox" ng-model="ctrl.showAnswers[category]" ng-change="ctrl.showAnswerChanged()"> </td> <td> <a href="#" class="btn btn-default btn-sm" ng-click="ctrl.advancedFilterModal(category)">Filter questions</a> <a href="#" class="btn btn-danger btn-sm" ng-click="ctrl.clearFilters(category)">Clear filters</a> </td> </tr> </tbody> </table> </div> </div> </div> </div> </div> </section> <div id="quiz" ng-show="ctrl.selectedCategories.length"> <section ng-class="{showAnswers: ctrl.showAnswers[category]}" ng-repeat="(category, questionArr) in ctrl.questionMap" ng-if="ctrl.selectedCategories.indexOf(category) !== -1"> <h2 class="category">{{::category}}</h2> <div class="question" ng-repeat="question in questionArr" data-number="{{::($index+1)}}." ng-show="question.show"> <p>{{ctrl.showCategoriesWithQuestion ? \'[\' + category + \']\' : \'\'}} {{::question.question}}</p> <p class="answer"><em>{{::question.answer}}</em></p> </div> </section> </div> </div>'),a.put("views/print-competition.html",'<style type="text/css" media="print">@page {\n    size: auto;   /* auto is the initial value */\n    margin: 1.5cm 0; /* this affects the margin in the printer settings */\n  }</style> <section class="controls"> <button style="margin-bottom: 15px" class="btn btn-primary" type="button" ng-click="ctrl.print()">Print</button> </section> <div id="quiz" class="showAnswers" ng-hide="error || !ctrl.questions.length"> <div class="question" ng-repeat="question in ctrl.questions" data-number="{{::($index+1)}}."> <p><strong style="color: blue">(Category: {{question.category}}, {{question.point_value}} points)</strong><br>{{::question.question}}</p> <p class="answer"><em>{{::question.answer}}</em></p> </div> </div> <div ng-show="error || !ctrl.questions.length"> <h2>An error occurred printing this competition.</h2> </div>'),a.put("views/reset-password.html",'<form name="ctrl.resetPasswordForm" novalidate ng-submit="ctrl.submit()"> <div class="row" ng-show="!ctrl.submitSuccess && !ctrl.submitFailed && !ctrl.authorizeError"> <div class="form-group col-xs-12 col-sm-offset-3 col-sm-6"> <label for="password">Enter your new password</label> <input type="password" name="password" id="password" class="form-control" ng-model="ctrl.password" equal-to="ctrl.confirmPassword" required> <div ng-messages="ctrl.resetPasswordForm.password.$error"> <div ng-message="required">Required</div> <div ng-message="value_compare">Password and Confirm password do not match</div> </div> </div> <div class="form-group col-xs-12 col-sm-offset-3 col-sm-6"> <label for="confirmPassword">Confirm your new password</label> <input type="password" name="confirmPassword" id="confirmPassword" class="form-control" ng-model="ctrl.confirmPassword" equal-to="ctrl.password" required> <div ng-messages="ctrl.resetPasswordForm.confirmPassword.$error"> <div ng-message="required">Required</div> <div ng-message="value_compare">Password and Confirm password do not match</div> </div> </div> <div class="form-group col-xs-12"> <button type="submit" class="btn btn-primary col-xs-12 col-sm-offset-5 col-sm-2"> Submit </button> </div> </div> <div class="row" ng-show="ctrl.submitSuccess"> <div class="col-xs-12 col-sm-offset-2 col-sm-8 text-center"> <h3>Your password as been successfully reset! <a href="/login">Login now</a></h3> </div> </div> <div class="row" ng-show="ctrl.authorizeError"> <div class="col-xs-12 col-sm-offset-2 col-sm-8 text-center"> <h3>Invalid password token. Please try a different password reset link.</h3> </div> </div> <div class="row" ng-show="ctrl.submitFailed"> <div class="col-xs-12 col-sm-offset-2 col-sm-8 text-center"> <h3>An error occurred while resetting your password. Please try again.</h3> </div> </div> </form>'),a.put("views/run-competition.html",'<competition-runner questions="ctrl.questions"></competition-runner>')}]);
